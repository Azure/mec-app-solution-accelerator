@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">
    @*@foreach (var alert in (IEnumerable<Alert>)ViewData["AlertsData"]!)
        {
            <p>Alert received on @alert.AlertTriggerTimeIni related with @alert.Information!</p>
        }*@
</div>
<div class="d-flex flex-row" id="page">
    <div class="d-flex flex-column justify-content-between" style="background-color: #777777; width: 65px;">
        <div>
            <img id="logo" src="assets/microsoft_logo.png" alt="MicrosoftLogo" />
            <hr class="line">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width=".5" stroke="black" id="icon">
                <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 3v11.25A2.25 2.25 0 006 16.5h2.25M3.75 3h-1.5m1.5 0h16.5m0 0h1.5m-1.5 0v11.25A2.25 2.25 0 0118 16.5h-2.25m-7.5 0h7.5m-7.5 0l-1 3m8.5-3l1 3m0 0l.5 1.5m-.5-1.5h-9.5m0 0l-.5 1.5M9 11.25v1.5M12 9v3.75m3-6v6" />
            </svg>
        </div>
        <div>
            <hr class="line" style="margin-bottom: 5rem;">
        </div>
    </div>
    <div id="content" class="d-flex flex-column">
        <h1 class="fw-semibold" id="page-title">Inspection Panel</h1>
        <div class="d-flex flex-row" id="data">
            <div id="left" class="d-flex flex-column w-full h-full overflow-auto">
                <partial name="_InspectionTable" />
            </div>
            <div id="right" class="d-flex flex-column justify-content-around mx-5">
                <div id="canvas" class="position-relative overscroll-contain max-w-none justify-self-center" :style="'width:'+initialSize.width+'px; height:'+initialSize.height+'px;'">
                    <div class="d-flex flex-column" id="zoom-control">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="zoom-button p-1 rounded-top" id="zoom-in">
                            @*@click.prevent="zoom(10)">*@
                            <path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607zM10.5 7.5v6m3-3h-6" />
                        </svg>
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="zoom-button p-1 rounded-bottom">
                            @*@click.prevent="zoom(-10)">*@
                            <path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607zM13.5 10.5h-6" />
                        </svg>
                    </div>
                    <div id="container" ref="container" class="position-relative overflow-scroll ratio ratio-16x9">
                        <div id="image" ref="image" class="cursor-grab active:cursor-grabbing" :style="'transform: scale('+zoomValue+');'">
                            @*@mousemove.prevent="imageScroll($event)" @mousedown="toggleClick(true)" @mouseup="toggleClick(false)" @wheel.prevent="wheelEvents" @mouseleave="toggleClick(false)" @contextmenu.prevent="emit('show-menu', $event)">*@
                            @*<source-icons></source-icons>*@
                        </div>
                    </div>
                </div>
                <div class="" id="info-content" onclick="console.log('@Model.selectedAlert.toString()')">
                    @if (Model.imageSelected)
                    {
                        <img src="./assets/videoSearch.png" alt="" class="h-[27rem] pr-3">
                    }
                    else if (Model.textSelected)
                    {
                        <div class="border border-dark position-relative d-flex flex-column border rounded justify-content-center bg-mWhite overflow-auto">
                            <pre class="position-absolute top-0 left-0 font-sans p-1 text-2xl font-light text-dark">-->
                                <!-- Lorem ipsum dolor sit amet consectetur adipisicing elit. Veritatis, quas beatae neque error quasi dolores minima iste tempora officiis harum nisi placeat. Sit laboriosam perferendis iure quisquam nobis voluptates libero!
                                Dolor eos, eum consectetur, odio quas eius officiis modi illo incidunt ex amet! Impedit, autem accusantium at quam voluptatum iste est deserunt magni. Voluptates enim ut explicabo nesciunt optio cumque.
                                Labore velit ipsum dolores debitis deleniti eveniet. Distinctio pariatur nulla, harum excepturi ipsa iste consectetur error et aspernatur reprehenderit beatae atque quo necessitatibus repudiandae vitae velit odit ad architecto! Possimus?
                                Itaque dolor reiciendis, voluptatum iusto repellendus repudiandae nihil beatae. Nam itaque molestiae excepturi quam cumque dolores libero similique iusto nemo! Esse reiciendis exercitationem rem temporibus et non similique nostrum quaerat. -->
                                @Model.selectedAlert.Information<br>
                                &emsp; – Position: (@Model.FindSource(Model.selectedAlert).Lat,@Model.FindSource(Model.selectedAlert).Long)<br>
                                &emsp; - Day/Time: @Model.selectedAlert.AlertTriggerTimeIni<br>
                                &emsp; - Detection Confidence: @Model.selectedAlert.Accuracy %
                            </pre>
                        </div>
                    }
                    else if (Model.hasTwoInputs)
                    {
                        <div class="info-container border border-dark d-flex flex-column border rounded justify-content-center">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width=".5" stroke="currentColor" class="empty-folder align-self-center">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 9.776c.112-.017.227-.026.344-.026h15.812c.117 0 .232.009.344.026m-16.5 0a2.25 2.25 0 00-1.883 2.542l.857 6a2.25 2.25 0 002.227 1.932H19.05a2.25 2.25 0 002.227-1.932l.857-6a2.25 2.25 0 00-1.883-2.542m-16.5 0V6A2.25 2.25 0 016 3.75h3.879a1.5 1.5 0 011.06.44l2.122 2.12a1.5 1.5 0 001.06.44H18A2.25 2.25 0 0120.25 9v.776" />
                            </svg>
                            <center><p class="font-sans text-2xl font-light text-dark align-self-center">Chosen alert has two inputs...<br>Click again some type of input to display it!</p></center>
                        </div>
                    }
                    else
                    {
                        <div class="info-container border border-dark d-flex flex-column border rounded justify-content-center">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width=".5" stroke="currentColor" class="empty-folder align-self-center">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 9.776c.112-.017.227-.026.344-.026h15.812c.117 0 .232.009.344.026m-16.5 0a2.25 2.25 0 00-1.883 2.542l.857 6a2.25 2.25 0 002.227 1.932H19.05a2.25 2.25 0 002.227-1.932l.857-6a2.25 2.25 0 00-1.883-2.542m-16.5 0V6A2.25 2.25 0 016 3.75h3.879a1.5 1.5 0 011.06.44l2.122 2.12a1.5 1.5 0 001.06.44H18A2.25 2.25 0 0120.25 9v.776" />
                            </svg>
                            <center><p class="font-sans text-2xl font-light text-dark align-self-center">No alert chosen yet...<br>Choose an alert from the table to display it!</p></center>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    console.log('@Url.Action("Get","Alert")');
</script>
