version: '3.4'

services:

  mongodb:
      image: mongo
      container_name: mongodb
      hostname: mongo

  aiinferencer:
      image: ${DOCKER_REGISTRY-}aiinferencer
      build:
        context: src/Services/Detections/ai_inferencer
        dockerfile: Dockerfile
      depends_on: 
        - alertsapi-dapr
        
  aiinferencer-dapr:
    image: "daprio/daprd:latest"
    command: [ "./daprd", "-app-id", "invoke-sender-frames", "--app-protocol", "grpc", "--app-port", "2060","--dapr-http-port", "3600", "--components-path", "./components"]
    volumes:
    - "./dapr/components/:/components"
    depends_on:
      - aiinferencer
    network_mode: "service:aiinferencer"

  rulesengine: 
    image: ${DOCKER_REGISTRY-}rulesengine
    build:
      context: .
      dockerfile: src/Services/Alerts/RulesEngine/Dockerfile
    depends_on:
    - mongodb

  rulesengine-dapr:
    image: "daprio/daprd:latest"
    command: [ "./daprd", "-app-id", "rulesengine", "-app-port", "80", "-components-path", "/components"]
    volumes:
    - "./dapr/components/:/components"
    depends_on:
    - rulesengine
    network_mode: "service:rulesengine"

  framesplitter:
      image: ${DOCKER_REGISTRY-}framesplitter
      build:
        context: src/Services/Detections/frameSplitter
        dockerfile: Dockerfile
      # volumes:
      #   - 'video_path:/data/videos'
      environment:
        - TIMEOUT=15
        - FEED=rtsp://0.tcp.ngrok.io:13571/mystream
      depends_on:
        - aiinferencer-dapr

  framesplitter-dapr:
    image: "daprio/daprd:latest"
    command: [ "./daprd", "-app-id", "Framesplitter","--app-protocol", "grpc","--dapr-http-port", "3500", "-components-path", "/components" ]
    volumes:
    - "./dapr/components/:/components"
    depends_on:
      - framesplitter
    network_mode: "service:framesplitter"

  alerts-api: 
    image: ${DOCKER_REGISTRY-}alertsapi
    build:
      context: .
      dockerfile: src/Services/Alerts/api/Dockerfile
    depends_on:
    - mongodb

  alertsapi-dapr:
    image: "daprio/daprd:latest"
    command: [ "./daprd", "-app-id", "alerts-api", "-app-port", "80", "-components-path", "/components"]
    volumes:
    - "./dapr/components/:/components"
    depends_on:
    - alerts-api
    network_mode: "service:alerts-api"
  
  myfrontend:
    image: ${DOCKER_REGISTRY-}myfrontend
    build:
      context: .
      dockerfile: src/Web/myfrontend/Dockerfile
    depends_on:
      - alertsapi-dapr

  myfrontend-dapr:
    image: "daprio/daprd:latest"
    command: [ "./daprd", "-app-id", "MyFrontEnd", "-app-port", "80" ]
    depends_on:
      - myfrontend
    network_mode: "service:myfrontend"

  mosquitto:
    hostname: mosquitto
    container_name: mosquitto_container
    image: eclipse-mosquitto:1.6.10
 
