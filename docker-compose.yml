version: '3.4'

services:
  aiinferencer:
      image: ${DOCKER_REGISTRY-}aiinferencer
      build:
        context: src/ML/ai_inferencer
        dockerfile: Dockerfile
      ports:
        - "50051:50051"
      depends_on: 
        - alertsapi-dapr
        
  aiinferencer-dapr:
    image: "daprio/daprd:latest"
    command: [ "./daprd", "-app-id", "invoke-sender-frames", "--app-protocol", "grpc", "--app-port", "50051","--dapr-http-port", "3600", "--components-path", "./components"]
    volumes:
    - "./components/:/components"
    depends_on:
      - aiinferencer
    network_mode: "service:aiinferencer"

  framesplitter:
      image: ${DOCKER_REGISTRY-}framesplitter
      build:
        context: src/Services/FrameSplitter/frameSplitter
        dockerfile: Dockerfile
      environment:
        - TIMEOUT=15
        - FEED=rtsp://2.tcp.ngrok.io:14641/mystream
      ports:
        - "57090"
      depends_on:
        - aiinferencer-dapr

  framesplitter-dapr:
    image: "daprio/daprd:latest"
    command: [ "./daprd", "-app-id", "Framesplitter","--app-protocol", "grpc","--dapr-http-port", "3500", "-components-path", "/components" ]
    volumes:
    - "./components/:/components"
    depends_on:
      - framesplitter
    network_mode: "service:framesplitter"

  alerts-api: 
    image: ${DOCKER_REGISTRY-}alertsapi
    build:
      context: .
      dockerfile: src/Services/Alerts/Alerts.api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "80"

  alertsapi-dapr:
    image: "daprio/daprd:latest"
    command: [ "./daprd", "-app-id", "alerts-api", "-app-port", "80", "-components-path", "/components"]
    volumes:
    - "./components/:/components"
    depends_on:
    - alerts-api
    network_mode: "service:alerts-api"
  
  myfrontend:
    image: ${DOCKER_REGISTRY-}myfrontend
    build:
      context: .
      dockerfile: src/Web/myfrontend/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
    ports:
      - "80"
      - "443"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    depends_on:
      - alerts-api

  myfrontend-dapr:
    image: "daprio/daprd:latest"
    command: [ "./daprd", "-app-id", "MyFrontEnd", "-app-port", "80" ]
    depends_on:
      - myfrontend
    network_mode: "service:myfrontend"

  db:
    container_name: sql_server_db
    hostname: sqlserver
    build:
      context: .
      dockerfile: infraestructure/mssqlserver/Dockerfile
    # volumes:
    #   - mssqlserver:/var/opt/mssql
    ports:
        - '1433:1433'

  mosquitto:
    hostname: mosquitto
    container_name: mosquitto_container
    image: eclipse-mosquitto:1.6.10
    ports:
      - '1883:1883'
 
  redis:
    image: "redis:alpine"
    hostname: statestorage
    ports:
      - "6379:6379"